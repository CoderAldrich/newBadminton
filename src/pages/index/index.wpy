<template>
  <view id="index">
    <view class="header"> 
      <view  @tap.stop="nearMatchTap" class="{{activeBar==='nearMatch'?'active':''}}">附近的比赛</view>
      <view  @tap.stop="rankingListTap" class="{{activeBar==='rankingList'?'active':''}}">球员排行榜</view>
    </view>
    <repeat for='[1,2,3]' key='index'  wx:if="{{activeBar==='nearMatch'}}">
      <nearMatch></nearMatch>
    </repeat>
    <repeat for='{{rankingList}}' key='index' wx:if="{{activeBar==='rankingList'}}">
      <rankingList :item.sync="item"></rankingList>
    </repeat> 
  </view>
</template>
<style lang="less" scoped>
@import  '../../util/util.less';
#index{
  background: #eee;
}
.header{
  margin:0px;
  padding-top:10px;
  display: flex;
  justify-content: space-around;
  align-items: center;
  
.active::after {
  content: '';
  position: absolute;
  left:50%;
  transform: translateX(-50%);
  bottom:-5px;
  width:60px;
  color:cadetblue;
  border-bottom:5px solid;
  }
  .active{
    position: relative;
  }
}
</style>
<script>
  import wepy from 'wepy';
  import nearMatch from './nearMatch';
  import rankingList from './rankingList';
  import 'wepy-async-function';

  export default class Index extends wepy.page {
  
    components = {
      nearMatch:nearMatch,
      rankingList:rankingList
    }
    data = {
      activeBar:'rankingList',
      rankingList:[]
    } 
    methods={
      nearMatchTap(){console.log(this.data.activeBar);
          this.activeBar='nearMatch';
      },
      rankingListTap(){console.log(this.data.activeBar);
          this.activeBar='rankingList';
          
      }
    }
   onLoad(){
     //请求资源，res
     let createMockItem=()=>{
          return {
              id:1,
              openId:'xxxxxx',
              avatarUrl:'https://wx.qlogo.cn/mmopen/vi_32/XX1SpfMDNTVicjpzzotfs8TFqJ2kMXdylIeyj4D1J2GVSqMibHk7ofOBQJLyf5vV7o9WoAjflCicbIeJU632gc9Jw/0',
              nickName:'轻轻',
              generalRank:(Math.random()*100).toFixed(0),
              No:(Math.random()*20).toFixed(0),
              count:(Math.random()*100).toFixed(0),
              win:(Math.random()*100).toFixed(0),
              fail:(Math.random()*100).toFixed(0),
              ratio:30
          }
       };
    let mockData=[];
    for(let i=0;i<10;i++){
      mockData.push(createMockItem());
    }
     this.rankingList=mockData;
     this.$apply();
   }
}
</script>
