<template>
  <!--against.wxml-->
<view class="wrapper">
  <view class="baseInfo">
    <view class="personCount">{{personCount}}</view>
    <view class="roundCount">
      <input bindinput="roundCountChange" value="{{roundCount}}" type="number"/>
      <label class="warning" wx:if="{{roundCount>8}}">不建议＞8场，可能会很累的哦</label>
    </view>
    <button catchtap='createAgainstTableTap' disabled="{{personCount<4?'disabled':false}}" class="createTableBtn" wx:if="{{showCreateBtn}}">生成对阵表</button>
  </view>

  <view wx:for="{{scoreList}}" wx:key="item" class="againstTable">
    <view class="againstItem" capture-bind:tap='activeItem' data-id="{{index}}" style="{{activedItem===index?'background:lightgreen;transform:scaleY(1.4)':''}}">
      <view class="side">
        <view class="name">{{item[0]}}</view>
        <view class="name">{{item[1]}}</view>
      </view>
      <view class="handleBtnGroup">
        <button bindtap='scoreChange' data-id="{{index}}" data-side="A" data-way="more">+</button>
        <button bindtap='scoreChange' data-id="{{index}}" data-side="A" data-way="less">-</button>
      </view>
      <view class="score scoreL">{{item[4]}}</view>
      <view class="sub">
        <view>vs</view>
        <view>第{{index+1}}场</view>
      </view>
      <view class="score scoreR">{{item[5]}}</view>
      <view class="handleBtnGroup">
        <button bindtap='scoreChange' data-id="{{index}}" data-side="B" data-way="more">+</button>
        <button bindtap='scoreChange' data-id="{{index}}" data-side="B" data-way="less">-</button>
      </view>
      <view class="side">
        <view class="name">{{item[2]}}</view>
        <view class="name">{{item[3]}}</view>
      </view>
    </view>
  </view>
</view>
</template>
<style lang="less">
@import '../../util/util.less';
.wrapper{
  background: @bgc;
}
.baseInfo{
  display: flex;
  flex-direction: column;
  justify-content:center;
  align-items: center;
  background: @bgc-card;
  margin:10px;
}
.roundCount,.personCount{
  display: flex;
  margin:10px;
  justify-content:space-between;
  align-items: center;
}
.personCount::before{
  content: '参赛人数：'
}
.roundCount::before{
  content: '每人场次：'
}
.roundCount input{
  flex:1;
  border-bottom: 1px solid;
  text-align: center;
}
.warning{
  color:red;
  font-size: 10px;
  width:90px;
  line-height: 15px;
}
.createTableBtn{
  width:80%;
  margin:20px auto;
}
.againstItem{
  display: grid;
  grid-template-columns: 2fr repeat(5,1fr) 2fr;
  justify-items: center;
  align-items: center;
  background-color: @bgc-card;
  padding:5px 0;
}
.side .name{
  margin:10px 0;
}
.score{
  background:#44aa44; 
  height:60px;
  line-height: 60px;
  width:35px;
  font-size:25px;
  text-align: center;
}
.scoreL{
  border-bottom-left-radius: 50%;
  border-top-left-radius: 50%;
}
.scoreR{
  border-bottom-right-radius: 50%;
  border-top-right-radius: 50%;
}
.handleBtnGroup button{
  width:40px;
  height:30px;
  line-height: 30px;
  text-align: center;
  margin:5px;
}
.sub{
  font-size: 12px;
  text-align: center;
}
</style>
<script>
import wepy from "wepy";
export default class againsttable extends wepy.page{

  data= {
    personList:[],
    scoreList:[],
    // personCount:0,
    roundCount:4,
    showCreateBtn:true,
    activedItem:''
  };
  computed={
    personCount(){
      return this.personList.length;
    }
  };
  watch={
    personList(newPersonList){
      wx.setStorage({key:'personList',data:newPersonList})
    },
    scoreList(newScoreList){console.log('changed')
      wx.setStorage({key:'scoreList',data:newScoreList})
    }
  }

  onLoad (options) {
    wx.setStorageSync('personList',['a','b','c','d','e','f','g','h']);
    this.initalPersonList();
    this.showCreateBtn= true;
  };
  onShow (options) {
    this.initalPersonList();
    this.showCreateBtn= true;
  };
  initalPersonList() {
    wx.getStorage({
      key: 'personList',
      success: res => {
        res = res.data.filter((name) => {
          return name
        });
        this.personList=res;
        this.$apply();
      },
    })
  };
methods={
  roundCountChange(e){
      this.roundCount=new Number(e.detail.value);
      this.showCreateBtn=true
  },
  createAgainstTableTap() {
    if(!this.roundCount||this.personCount*this.roundCount%4){
      wx.showModal({ 
        title: "错误提示",
        content: "场次和人数的乘积 不能被4整除 排阵失败！！",
        mask:true,
        duration:2000
        })
      return
      }
    this.getAgainstTable();
    },
  scoreChange(e){
    let id = e.target.dataset.id;
    let side=(e.target.dataset.side==='A'?4:5);
    let way=e.target.dataset.way;
    let newScoreList = this.scoreList;
    if (way === "more") {
      newScoreList[id][side]++
    } else if (newScoreList[id][side]!==0){
      newScoreList[id][side]--
    };
    this.scoreList=newScoreList;
    // this.$apply();
  },
};
events={

  activeItem(e){
    this.activedItem=e.currentTarget.dataset.id;
    e.stop;
  }
}

  getAgainstTable(){
      wx.request({
        url: `https://gzbtestsystem.cn/badminton/againsttable?NumberOfPeople=${this.personCount}&RoundsOfPerson=${this.roundCount}&format=json`,
        method: "GET",
        success: res => {
          Array.prototype.numToString.call(res.data.AgainstTable,this.personList);
          for (let i=0; i<res.data.AgainstTable.length;i++){
            res.data.AgainstTable[i] = res.data.AgainstTable[i].concat([0,0]);
          };
          this.scoreList=res.data.AgainstTable;
          this.showCreateBtn=false;
          this.$apply();
          wx.showModal({
            title: '友情建议',
            content: `共为您排了${res.data.AgainstTable.length}场比赛，如果您的赛时为2小时，建议预定${Math.ceil(res.data.AgainstTable.length / 14)}个场地!\rps:每个场地不宜超过14场。`,
          })
        }
      })
  };
}
</script>


