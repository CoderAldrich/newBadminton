<template>
  <view class="container">
    <header :titleList.sync="titleList" :selectedItem.sync="activeBar"></header>
    <view class="add" @tap.stop="createNewAgainst">
      <button>创建赛事</button>
    </view>   
    <repeat for="{{matchInfoList}}" key="index" index="index" item="matchInfo">
      <view  class="matchCard" @tap="goToLive" data-tag="cardTap" data-gameid="{{matchInfo.id}}" data-personlist="{{matchInfo.players}}">
        <matchInfo :matchInfo.sync="matchInfo"></matchInfo>
      </view>
    </repeat>
  </view> 
</template>
<style lang="less" scoped>
  @import '../../common/common.less';
  .container{
    background: @bgc;
    .add{
      margin-top:40rpx;
      border-radius: 10px;
      line-height: 100rpx;
      text-align: center;
      vertical-align: middle;
      button{
        display: inline-block;
        background:@bgc-card;
        vertical-align: middle;
        height: 100px;
        width:90%;
        padding:0;
        line-height: 100px;
        font-size: 60rpx;
        letter-spacing: 20rpx;
        color:@bgc;
      }
    }
    .matchCard{    
      margin:20px;
      padding:10px;
      font-size: 12px;
      color:#666;
      background: @bgc-card;
      border-radius: 10px;
      position: relative;
      height: 300rpx;
    }
  }
</style>
<script>
import wepy from "wepy";
import {initUserInfo,downLoadMatchInfoList,downLoadMatchInfo,share} from '../../common/common';
import matchInfo from '../../components/matchInfo';
import header from '../../components/header';
export default class myGameList extends wepy.page{
  config={
    navigationBarTitleText:'我的赛事列表'
  }
    data={
      userInfo:{},
      matchInfoList:[],
      activeBar:'我创建de比赛',
      titleList:['我创建的比赛','我参与的比赛'],
      rankingList:[]
   }
    components = {
      matchInfo:matchInfo,
      header:header
    }
  async onLoad(){
     this.userInfo=await initUserInfo()
    let token=this.userInfo.token;
    if(token){
      this.pageHide=false
      this.matchInfoList = await downLoadMatchInfoList(token)
      this.$apply()
    }
  }
  onShow(){   
    // this.getMatchList();
  }
  async onShareAppMessage(res){
    await initUserInfo();
    return share('/pages/main/main.wpy')
  }
  // async getMatchList(){
  //   let matchList=await downLoadMatchInfoList(this.token);
  //   if(!matchList){return}
  //   for(let match of matchList){
  //     let matchInfo = await downLoadMatchInfo(match.id);
  //     let ifIn=false;//判断是否已经报名了
  //     if(matchInfo.players && matchInfo.players.length){
  //       matchInfo.players.map(player=>{
  //         if(player.token=this.token){
  //           ifIn=true;
  //         }
  //       })
  //     }
  //     //为返回的数组添加参数，用于控制组件
  //     matchInfo.ifShowInfo=true;
  //     matchInfo.animationData=false;
  //     matchInfo.ifIn=ifIn;
  //     this.matchInfoList.push(matchInfo);;
  //   }
  //   this.$apply();
  // }
  methods={
      createNewAgainst(){
        wx.navigateTo({
          url:"/pages/main/createNewAgainst"
        })
      },
      goToLive(e){
        let dataset=e.target.dataset
        if(e.target.dataset.tag==='cardTap'){
          let gameid=dataset.gameid
          let personList=[]
          console.log('dataset=',dataset,'personList',dataset.personlist)
          dataset.personlist.forEach(userInfo => {
            personList.push(userInfo.user.uid)
          });
          wx.setStorageSync('gameid',e.target.dataset.gameid)
          wx.setStorageSync('playerList',e.target.dataset.personlist)
          wx.navigateTo({
            url:`/pages/live/live?personList=${personList.join('+')}&gameid=${gameid}`,
            success(res){          
              console.log('go to live,with',personList,gameid)
            }
          })
        }
      }
    }
}
</script>


