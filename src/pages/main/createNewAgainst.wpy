<template>
  <view class="container">
    <view class="search">搜索附近的比赛</view>
    <form @submit="submit">
      <repeat for="{{list}}" key="index" index="index" item="item">    
        <item2colunm :item.sync="item" :dateRange.sync="dateRange"></item2colunm>
      </repeat>
      <button formType="submit">确定</button>
    </form>
  </view>
</template>
<style lang="less" scoped>
@import '../../common/common.less';
.container{
  .search{
    height:300rpx;
    line-height: 375rpx;
    text-align: center;
    vertical-align: middle;
    border-bottom-left-radius:50% 10%;
    border-bottom-right-radius:50% 10%;
    background: @score-color;
    margin-bottom: 60rpx;
  }
  button{
    margin:60rpx auto;
    width: 375rpx;
    background: @score-color;
  }
}
</style>

<script>
import wepy from 'wepy';
import {formatTime,initUserInfo,createGame} from '../../common/common';
import item2colunm from '../../components/item2colunm';
export default class CreateNewAgain extends wepy.page {
  config={
    navigationBarTitleText:'创建比赛'
  }
  components={
    item2colunm:item2colunm
  }
  data={
    token:'',
    userInfo:{},
    dateRange:{
      end:{time:"23:00",date:''},
      start:{time:"04:00",date:''}
    },
    list:[
      {
        title:'主题',
        name:'theme',
        value:'勘测设计羽协',
        type:'strng',
      },{
        title:'地点',
        name:'address',
        value:'葛洲坝青少年宫三楼',
        type:'strng',
      },{
        title:'日期',
        name:'date',
        value:'--',
        type:'string',
      },{
        title:'时间',
        name:'time',
        value:'09:00',
        type:'string',
      }
    ]
  }
  async onLoad(option){
    await initUserInfo();
    this.token=wx.getStorageSync('token');
    this.userPrivateInfo= wx.getStorageSync('userInfo');
    this.$apply();
    this.calcDateRange();
    this.initDateTime();
  }
  calcDateRange(){//只允许在未来的1个月内创建比赛,计算从当下 到一个月后的时间
    let start=new Date(Date.now()),
        formatStart=formatTime(start,'-').trim().split(' ');
    let end=new Date(Date.now()+30*24*3600*1000),
        formatEnd=formatTime(end,'-').trim().split(' ');
    this.dateRange.start.date=formatStart[0];
    this.dateRange.end.date=formatEnd[0];
  }
  initDateTime(){
    Object.keys(this.list).map(key=>{//按照 Data range 范围，对于date的item 初始化其中的数值
      if(this.list[key].name==='date'){
      this.list[key].value=this.dateRange.start.date;
      }
    })
  }
  methods={
    submit(e){
      let formData=e.detail.value,
          date=formData.date,
          time=formData.time;
      console.log('not IN,now in submit fn',formData,this.token);
      let newFormData={};//由于form提交的数据格式是date= time=，而后端交互需要提交 类似2018-04-07 13:14:07格式
      Object.keys(formData).map(key=>{
        if(['time','date'].indexOf(key)===-1){
          newFormData[key]=formData[key]
        }
      })
      if(time){newFormData['begintime']=date+' '+time+':00'}
      createGame(newFormData,this.token);
    }
  }
}
</script>
