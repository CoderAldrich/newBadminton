
<template>
  <view class="warp">
  <view class="item">
      <label for="personNum">人数</label>
      <input type="number" name="" id="personNum" value="{{personList.length}}" />
  </view>
  <view class="item">
      <label for="roundPer">每人场数</label>
      <input type="number" name="" id="roundCount" value="{{roundCount}}" @input="changeRoundCount"/>
  </view>
  <button id="btn" @tap="makeGroup">生产对阵表</button>
  </view>
</template>

<style lang="less" scoped>
  @import '../../common/common.less';
  .item{
    font-size:30rpx;
    background: @bgc-card;
    margin:0 0 4px 0;
    padding-left:30rpx;
    border-bottom: 2px solid @bgc;
    label{
      width: 150rpx;
      color: @font-side;
      font-weight: lighter;
    }
    label,input{
      display: inline-block;
      height: 60px;
      line-height: 60px;
      vertical-align: middle;
    }
    input{
      width:500rpx;
    }
  }
   .result{
     font-size: 14px;
   }
   .result .err{
     text-align: center;
   }
  .result .item{
      margin: 10px auto;
      padding:5px;
      display: flex;
      justify-content: space-around;
      border-bottom:5px solid @bgc;
     }
  .result .side{
    flex:1;
    font-size:20px;
    text-align: center;
  }
  .result .mark p{
    margin:0;
    padding:0;
    text-align: center;
  }
</style>


<script>
import wepy from 'wepy';
import badmin from '../../common/makeGroup'
export default class BaseData extends wepy.page {
  props={
    personList:{
      type:'Array',
      default:[]
    },
    groupList:{
      type:'Array',
      default:[],
      twoWay:true
    }
  }
  data={
      roundCount:4,
      msg:['努力计算中','','对不起，这次没有找到合适的对阵模式，点我重试'],
      state:1
    }
  onLoad(options){}
  methods={
    makeGroup(){
      this.state=0;
      let personNum=this.personList.length
      let roundCount=this.roundCount
      let data=(new badmin(personNum,roundCount)).result
      if(typeof data ==='string'){
        this.state=2;
        return
      }else{
        this.state=1;
        for(let i=0,len=data[1].length;i<len;i++){
          let p1=this.personList[data[1][i]-1];
          let p2=this.personList[data[2][i]-1];
          let p3=this.personList[data[3][i]-1];
          let p4=this.personList[data[4][i]-1];
          this.groupList.push([p1,p2,p3,p4,0,0,'undone'])
        }
      }
    },
    changeRoundCount(e){
      this.roundCount=e.detail.value
    }
  }
}
</script>